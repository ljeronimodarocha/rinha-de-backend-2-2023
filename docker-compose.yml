version: '3.9'

services:
  spring-api1:
    container_name: api1
    build: .
    hostname: spring-api1
    environment:
      - DATABASE_URL=database
      #- REDIS_HOST=cache
      - PORT=3000
    depends_on:
      - db-postgres
      #- cache
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '1GB'
    networks:
      - app-network
  spring-api2:
    container_name: api2
    build: .
    hostname: spring-api2
    environment:
      - DATABASE_URL=database
      #- REDIS_HOST=cache
      - PORT=3001
    depends_on:
      - db-postgres
      #- cache
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '1GB'
    networks:
      - app-network
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - spring-api1
      - spring-api2
    ports:
      - "9999:9999"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.25GB'
  db-postgres:
    image: postgres
    container_name: postgres_rinha
    command: > 
      -c 'shared_buffers=256MB'
      -c 'work_mem=64MB'
      -c 'maintenance_work_mem=128MB'
      -c 'effective_cache_size=512MB'
      -c 'max_connections=2500'
    hostname: database
    environment:
      POSTGRES_DB: rinha
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '1.25GB'
    networks:
      - app-network
  #cache:
  #  hostname: cache
  #  container_name: redis
  #  image: redis:latest
  #  command: [ "redis-server", "--appendonly", "no", "--save ''" ]
  #  ports:
  #    - '6379:6379'
  #  deploy:
  #    resources:
  #      limits:
  #        cpus: '0.05'
  #        memory: '0.25GB'
  #  networks:
  #    - app-network
networks:
  app-network: